
_____ Index

A.		To Do

1.		Docker
1.1		A Bunch of Commands
1.2		Notes

2.		Linux
1.2		A Bunch of Commands

3.		Nginx

4.		SMB

5.		hdparm




_____ 1. To Do

Current To Do List:
	-YML Files
		-backup copy Bookshelf
	-Clean up unneeded junk
		-PostgreSQL
		-Talescale
		-MediaWiki
	-SMB Server
		-Document
			/HomeNAS1
			/HomeNAS1_2


_____ 1. Docker

Notes to help me, whenever I wind up needing to look up
commands, directories, or whatever.



____ 1.1 A bunch of commands

docker run
	start new docker container from an image
	
docker ps
	list all running containers

docker stop
	stop a running container

docker rm
	remove a docker container

docker images
	list all docker images available on system

docker pull
	download a docker img from a registry

docker exec
	execute a command in a running container

docker-compose
	manage multi-container docker applications


Docker version
Docker search 
Docker pull
Docker run 
Docker ps
Docker stop 
Docker restart 
Docker kill
Docker exec 
Docker login
Docker commit 
Docker push 
Docker network 
Docker history 
Docker rmi 
Docker ps -a
Docker copy
Docker logs   
Docker volume 
Docker logout



____ 1.2 Notes



_____ 2. Linux

Once again: Wo zur Hölle ist die verdammte Datei nochmal?
Mein lieblings Spiel!

As a less frequent linux user, a reference for commands, and
other information is really useful. That's why these random
newbie notes are here.



____ 2.1 A Bunch of Commands
##Clean this section up 

Example to search for files
find /home/pi -name "*.yml" -o -name "*.yaml"

You can also output the file paths to a file
find /home/pi -name "*.yml" -o -name "*.yaml" > docker_config_files.txt


## Directories

cd ~
	Go to root directory

cd -
	Switch between current and previous directories

ls	-l	# Long format (detailed info)
	-a	# All files, including hidden
	-h	# human-readable format (KB, MB, ...)

## Removing applications

sudo apt remove tailscale	# remove apt
sudo apt purge tailscale	# remove config files
sudo apt autoremove			# remove leftover dependencies


## ifconfig

sudo ifconfig wlan0 down 	# disable wifi (up to enable)


## mounted drives

df -h		# check mounted drives

sudo nano /etc/fstab	# automatic mount after booting
						# following line as example for SMB Drive
						# configured with Nginx webserver
	//192.168.x.x/Backup /mnt/smbshare cifs username=USERNAME,password=PASSWORT,uid=1000,gid=1000 0 0
		# bedenk das Risiko, ein Passwort so zu hinterlegen

## search 	(with grep, find is another command)

grep	# use to search
		# Global Regular Expression Print

grep -r "hdparm" /etc/systemd/
		# search directory for "hdparm"
		# -r = recursively search in all files within dir

## shutdown and reboot

sudo reboot
sudo shutdown now

_____ 3. Nginx

sudo nginx -t	# test Nginx config after making changes
				# before restarting service

_____ 4. SMB

# 29.10.24 Mounted Drives

Dateisystem    Gr��e Benutzt Verf. Verw% Eingeh�ngt auf
udev            1,6G       0  1,6G    0% /dev
tmpfs           380M    3,2M  377M    1% /run
/dev/mmcblk0p2   29G    9,5G   18G   35% /
tmpfs           1,9G    148K  1,9G    1% /dev/shm
tmpfs           5,0M     16K  5,0M    1% /run/lock
/dev/mmcblk0p1  510M     75M  436M   15% /boot/firmware
tmpfs           380M     40K  380M    1% /run/user/1000
/dev/sda1       5,5T     84G  5,4T    2% /media/xxx/xxxNAS1


_____ 5. hdparm

My hdparm settings.

# First, hdparm must be installed to use the hdparm
# power management.

sudo apt install hdparm		# install

## A typical command for hdparm, but we aren't using
#  this. Just as an example.

sudo hdparm -S <time> /dev/sdX	# time * 5 seconds
								#replace X with drive

	# sd = SCSI disk
	# sda would be the first drive
	# sda1 would be a drive partition

## What we want is a service file:
sudo nano /etc/systemd/system/hdparm.service

## hdparm.service content:
[Unit]
Description=Ext HDD to sleep after inactivity

[Service]
Type=oneshot
ExecStart=/usr/sbin/hdparm -S 120 /dev/sda # sleep after 10 minutes
RemainAfterExit=yes     # Service remains active after sleep

[Install]
WantedBy=multi.user.target
